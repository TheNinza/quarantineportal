{"version":3,"sources":["components/Nav/Nav.jsx","components/About/About.jsx","components/LoginAs/LoginAs.jsx","components/CovidApi/CovidApi.jsx","containers/home.jsx","components/Sidebar/Sidebar.jsx","components/UserProfile/UserInfo.jsx","components/UserProfile/EditProfile.jsx","components/UserProfile/Actions/ManageCenters/center.jsx","components/UserProfile/Actions/ManageCenters/ManageCenters.jsx","components/UserProfile/Actions/ManageUsers/User.jsx","components/UserProfile/Actions/ManageUsers/ManageUsers.jsx","components/UserProfile/Actions/ManageStaffs/Staff.jsx","components/UserProfile/Actions/ManageStaffs/ManageStaffs.jsx","components/UserProfile/Actions/ManagePatients/Patient.jsx","components/UserProfile/Actions/ManagePatients/ManagePatients.jsx","components/UserProfile/Actions/ManageRequests/Request.jsx","components/UserProfile/Actions/ManageRequests/ManageRequests.jsx","components/UserProfile/Actions/ManageCenters/NewCenter.jsx","components/UserProfile/Actions/ManageStaffs/NewStaff.jsx","components/UserProfile/Actions/ManageRequests/NewRequest.jsx","components/UserProfile/Actions/ManageUsers/NewUser.jsx","components/UserProfile/Actions/ManagePatients/NewPatient.jsx","components/UserProfile/Actions/ManageCenters/EditCenter.jsx","components/UserProfile/Actions/ManagePatients/EditPatient.jsx","components/UserProfile/Actions/ManageStaffs/EditStaff.jsx","components/UserProfile/Actions/ManageUsers/EditUser.jsx","components/UserProfile/UserProfile.jsx","containers/App.js","serviceWorker.js","index.js"],"names":["Nav","isSignedIn","onRouteChange","className","onClick","About","LoginAs","props","roledescription","role","optionSelect","event","setState","user_role_name","target","value","onUpdatePass","password","onLogin","buttonClicked","invalidLogin","fetch","method","headers","body","JSON","stringify","state","then","response","json","data","user_id","loadUser","catch","err","console","log","user","onChange","this","name","id","htmlFor","type","Component","CovidApi","confirmed","recovered","deaths","element","statewise","api","Home","Sidebar","onProfileRouteChange","user_name","Fragment","UserInfo","user_email","user_phone","EditProfile","onNameChange","onEmailChange","onPhoneChange","onButtonSubmit","user_role","updated","center","onbuttonedit","sendData","center_id","onbuttondelete","window","alert","updatelist","onbuttonshowstaff","onbuttonshowpatient","center_name","center_type_description","center_address","center_contact_number","number_staffs","number_patients","ManageCenters","centers","deleted","length","map","key","User","ManageUsers","users","Staff","staff","staff_id","profileRoute","staff_name","staff_contact_number","role_name","working_hours","ManageStaffs","setCenterId","staffs","temp","filter","Patient","patient","patient_id","patient_name","patient_address","date_of_admission","stay_duration","patient_status","ManagePatients","patients","request_id","request","onbuttonprocess","status_id","onbuttondiscard","request_description","status_name","ManageRequests","requests","onfilter","req","Request","NewCenter","center_type","center_type_id","onbuttonsubmit","onaddressChange","oncontact_numberChange","ontype_idChange","onidChange","NewStaff","role_id","onWorking_hoursChange","onRole_idChange","NewService","onCenterIdChange","onReqDescriptionChange","NewUser","user_role_id","onuser_emailChange","onuser_Role_idChange","NewPatient","onstatusChange","ondateofadmissionChange","ondurationChange","onidchange","EditCenter","EditPatient","EditStaff","EditUser","UserProfile","NewRequest","particlesOptions","particles","number","density","enable","area","initialState","route","App","params","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.9d410155.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Nav = ({ isSignedIn, onRouteChange }) => {\n  return (\n    <nav className=\"dt w-100 border-box pa3 ph5-ns shadow-5 nav-bar\">\n      <div className=\"dtc v-mid mid-gray w-50 f2 white\">\n        Quarantine Center Management Tool\n      </div>\n      <div className=\"dtc v-mid w-75 tr\">\n        <div\n          onClick={() => onRouteChange(\"home\")}\n          className=\"grow link dim light-gray f6 f5-ns dib mr3 mr4-ns pointer\"\n        >\n          {isSignedIn ? \"Log Out\" : \"\"}\n        </div>\n        <div\n          onClick={() => onRouteChange(\"about\")}\n          className=\"grow link dim light-gray f6 f5-ns dib mr3 mr4-ns pointer\"\n        >\n          {!isSignedIn ? \"About\" : \"\"}\n        </div>\n        <div\n          onClick={() => onRouteChange(\"home\")}\n          className=\"grow link dim light-gray f6 f5-ns dib mr3 mr4-ns pointer\"\n        >\n          {!isSignedIn ? \"Home\" : \"\"}\n        </div>\n        {/* <div className=\"grow link dim light-gray f6 f5-ns dib mr3 mr4-ns pointer\">\n          Quarantine Centers\n        </div> */}\n      </div>\n    </nav>\n  );\n};\n\nexport default Nav;\n","import React from \"react\";\n\nconst About = () => {\n  return (\n    <div>\n      <div className=\"flex flex-column justify-center items-center pa2\">\n        <div className=\"intro pa2 mv2 mh2 shadow-3 br3 w-90\">\n          <div className=\"fw6 f2 tc\"> About The Project</div>\n          <div className=\"f4 mt3 shadow-3 br3 pa3\">\n            This project demonstrates a Quarantine Center Management Portal for\n            covid-19 patients. You can login as a user having one of the three\n            roles given on the homepage. The Project uses mysql database for all\n            the data storage and NodeJS for the backend and React for the\n            frontend. For more information, kindly refer to the project report.\n          </div>\n        </div>\n        <div className=\"contributers pa2 mt2 mh2 shadow-3 br3 w-90\">\n          <div className=\"fw6 f2 tc\"> Project Contributers </div>\n          <div className=\"flex justify-center items-center\">\n            <div className=\"pa2 mt2 mh2 shadow-3 br3 grow\">\n              <div className=\"f3 fw6\">Nikhil Kumar Gupta</div>\n              <div className=\"f4 fw4\">2019BCS-036</div>\n              <div className=\"f5 fw4\">\n                Created and deployed this website (full-stack).\n              </div>\n            </div>\n            <div className=\"pa2 mt2 mh2 shadow-3 br3 grow\">\n              <div className=\"f3 fw6\">Aditi Singh</div>\n              <div className=\"f4 fw4\">2019BCS-001</div>\n              <div className=\"f5 fw4\">\n                Created the database, ER Diagram and normalised the tables.\n              </div>\n            </div>\n          </div>\n          <div className=\"flex justify-center items-center\">\n            <div className=\"pa2 mt2 mh2 shadow-3 br3 grow\">\n              <div className=\"f3 fw6\">Harshit Singh</div>\n              <div className=\"f4 fw4\">2019BCS-025</div>\n              <div className=\"f5 fw4\">\n                Written all the queries for the functioning of database system.\n              </div>\n            </div>\n            <div className=\"pa2 mt2 mh2 shadow-3 br3 grow\">\n              <div className=\"f3 fw6\">Yahspal Parmar</div>\n              <div className=\"f4 fw4\">2019BCS-073</div>\n              <div className=\"f5 fw4\">\n                Created and formated the project report and tested the website\n                for bugs.\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default About;\n","import React, { Component } from \"react\";\n\nclass LoginAs extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      user: {},\n      user_role_name: \"Government Official\",\n      password: \"\",\n      invalidLogin: false,\n      buttonClicked: false,\n    };\n  }\n\n  roledescription = (role) => {\n    if (role === \"Government Official\") {\n      return \"The user will be able to manage different quarantine centers, staffs and respond to any request from the center.\";\n    } else if (role === \"Center Manager\") {\n      return \"The user will be able to manage the staffs, patients and send requests of his/her center only.\";\n    } else if (role === \"Database Administrator\") {\n      return \"The user will be able to manage the managers, government officials can perform all the CRUD operations on the database.\";\n    }\n  };\n\n  optionSelect = (event) => {\n    this.setState({ user_role_name: event.target.value });\n  };\n\n  onUpdatePass = (event) => {\n    this.setState({ password: event.target.value });\n  };\n\n  onLogin = () => {\n    this.setState({ buttonClicked: true, invalidLogin: false });\n    fetch(\"https://enigmatic-journey-77724.herokuapp.com/login\", {\n      method: \"post\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        user_role_name: this.state.user_role_name,\n        password: this.state.password,\n      }),\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        if (data.user_id) {\n          this.props.loadUser(data);\n          this.props.onRouteChange(\"userProfile\");\n        } else this.setState({ invalidLogin: true });\n      })\n      .catch((err) => console.log(err));\n  };\n\n  render() {\n    return (\n      <div className=\"flex flex-column items-center br3 shadow-3 pa3\">\n        <div className=\"pa2 br3 tc shadow-3\">\n          <label className=\"f1 b underline\">Login As</label>\n        </div>\n        <div>\n          <div className=\"pa3 tc\">\n            <select\n              onChange={this.optionSelect}\n              name=\"users\"\n              id=\"users\"\n              className=\"pa2 f3 br3 dim shadow-3\"\n            >\n              <option value=\"Government Official\">Government Official</option>\n              <option value=\"Center Manager\">Center Manager</option>\n              <option value=\"Database Administrator\">\n                Database Administrator\n              </option>\n            </select>\n          </div>\n          <div className=\"mt3\">\n            <label className=\"db fw6 lh-copy f6\" htmlFor=\"login-pass\">\n              Login Password\n            </label>\n            <input\n              onChange={this.onUpdatePass}\n              className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\n              type=\"password\"\n              name=\"login-password\"\n              id=\"login-password\"\n            />\n          </div>\n          <div className=\"tc mt2\">\n            <input\n              onClick={this.onLogin}\n              type=\"button\"\n              value=\"Login\"\n              className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib shadow-3 br3\"\n            />\n          </div>\n        </div>\n        {this.state.buttonClicked && !this.state.invalidLogin ? (\n          <code className=\"grey mt3\">Loging In. Please Wait...</code>\n        ) : (\n          \"\"\n        )}\n        {this.state.invalidLogin ? (\n          <code className=\"red mt3\">Invalid Password</code>\n        ) : (\n          \"\"\n        )}\n        <div className=\"ba mt3 mh2 br3 pa2\">\n          <div className=\"tc f4 underline\">\n            <label>Role:</label>\n          </div>\n          <div className=\"pa2\">\n            <code>{this.roledescription(this.state.user_role_name)}</code>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default LoginAs;\n","import React, { Component } from \"react\";\n\nclass CovidApi extends Component {\n  state = {\n    confirmed: -1,\n    recovered: -1,\n    deaths: -1,\n  };\n\n  componentDidMount() {\n    fetch(\"https://api.covid19india.org/data.json\")\n      .then((response) => response.json())\n      .then((data) => {\n        const element = data.statewise[0];\n        this.setState({\n          confirmed: element.confirmed,\n          recovered: element.recovered,\n          deaths: element.deaths,\n        });\n      });\n  }\n\n  render() {\n    const api = (\n      <div className=\"pa2 f3 fw4\">\n        <div className=\"shadow-3 mt3 br3 pa2 pointer grow hover-bg-gold\">\n          Confirmed:{` ${this.state.confirmed}`}\n        </div>\n        <div className=\"shadow-3 mt3 br3 pa2 pointer grow hover-bg-green\">\n          Recovered:{` ${this.state.recovered}`}\n        </div>\n        <div className=\"shadow-3 mt3 br3 pa2 pointer grow hover-bg-red\">\n          Deaths:{` ${this.state.deaths}`}\n        </div>\n      </div>\n    );\n\n    return (\n      <div className=\"flex flex-column justify-center items-center shadow-3 pa2 br3\">\n        <div className=\"f3 underline shadow-3 br3 pa2 pointer grow\">\n          India's Current Covid-19 Updates\n        </div>\n        <div>\n          {this.state.confirmed === -1 ? (\n            <div className=\"tc o-30\">\n              <h1>Loading...</h1>\n              <div>Connect to the internet for the results</div>\n            </div>\n          ) : (\n            api\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default CovidApi;\n","import React from \"react\";\nimport \"tachyons\";\nimport LoginAs from \"../components/LoginAs/LoginAs\";\nimport CovidApi from \"../components/CovidApi/CovidApi\";\n\nconst Home = ({ onRouteChange, loadUser }) => {\n  return (\n    <div className=\"cf ph3 ph5-ns pv5\">\n      <div className=\"fn fl-ns w-50-ns pr4-ns\">\n        <h1 className=\"mb3 mt0 lh-title\">\n          Welcome to the Quarantine Center Management Center\n        </h1>\n        <div>\n          <CovidApi />\n        </div>\n      </div>\n      <div className=\"fn fl-ns w-50-ns\">\n        <LoginAs onRouteChange={onRouteChange} loadUser={loadUser} />\n      </div>\n    </div>\n  );\n};\n\nexport default Home;\n","import React from \"react\";\n\nconst Sidebar = ({ user, onProfileRouteChange }) => {\n  return (\n    <div className=\"sidebar white bg-light-green shadow-3\">\n      <div className=\"flex flex-column justify-center tc \">\n        <div className=\"intro fw6\">\n          <div\n            onClick={() => {\n              onProfileRouteChange(\"userInfo\");\n            }}\n            className=\"w-90 pa3 dim center br3 grow shadow-3 mt2 pointer bg-red\"\n          >\n            <code> {user.user_name} </code>\n          </div>\n          <div\n            onClick={() => {\n              onProfileRouteChange(\"editProfile\");\n            }}\n            className=\"w-90 pa3 dim br3 center grow shadow-3 mt2 pointer bg-orange\"\n          >\n            <code>Edit Profile</code>\n          </div>\n        </div>\n        <div className=\"actions fw4 mt4\">\n          {user.user_role_name !== \"Center Manager\" ? (\n            <div\n              onClick={() => {\n                onProfileRouteChange(\"manageCenters\");\n              }}\n              className=\"w-90 pa3 dim br3 center grow shadow-3 mt2 pointer bg-blue\"\n            >\n              <code>Manage Quarantine Centers</code>\n            </div>\n          ) : (\n            \"\"\n          )}\n\n          <div\n            onClick={() => {\n              onProfileRouteChange(\"managePatients\");\n            }}\n            className=\"w-90 pa3 dim br3 center grow shadow-3 mt2 pointer bg-blue\"\n          >\n            <code>Manage Patients</code>\n          </div>\n          <div\n            onClick={() => {\n              onProfileRouteChange(\"manageStaffs\");\n            }}\n            className=\"w-90 pa3 dim br3 center grow shadow-3 mt2 pointer bg-blue\"\n          >\n            <code>Manage Staffs</code>\n          </div>\n          <div\n            onClick={() => {\n              onProfileRouteChange(\"manageRequests\");\n            }}\n            className=\"w-90 pa3 dim br3 center grow shadow-3 mt2 pointer bg-blue\"\n          >\n            <code>Manage Requested Services</code>\n          </div>\n          {user.user_role_name === \"Database Administrator\" ? (\n            <div\n              onClick={() => {\n                onProfileRouteChange(\"manageUsers\");\n              }}\n              className=\"w-90 pa3 dim br3 center grow shadow-3 mt2 pointer bg-blue\"\n            >\n              <code>Manage Users</code>\n            </div>\n          ) : (\n            <React.Fragment></React.Fragment>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Sidebar;\n","import React from \"react\";\n\nconst UserInfo = ({ user }) => {\n  return (\n    <div className=\"\">\n      <div className=\"tc f1 mt2 fw6 underline\">\n        <code>User Profile</code>\n      </div>\n      <div className=\"flex flex-column justify-center shadow-3 w-50 center pa2 br3 mt3\">\n        <div className=\"f2 mt2 fw3\">\n          <code>Name:{` ${user.user_name}`} </code>\n        </div>\n        <div className=\"f3 mt2 fw2\">\n          <code>User Id: {`${user.user_id}`}</code>\n        </div>\n        <div className=\"f3 mt2 fw2\">\n          <code>Role: {`${user.user_role_name}`}</code>\n        </div>\n        <div className=\"f3 mt2 fw2\">\n          <code>Email: {`${user.user_email}`}</code>\n        </div>\n        <div className=\"f3 mt2 fw2\">\n          <code>Phone: {`${user.user_phone}`}</code>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default UserInfo;\n","import React, { Component } from \"react\";\n\nclass EditProfile extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      user_id: this.props.user.user_id,\n      user_name: \"\",\n      user_email: \"\",\n      user_phone: \"\",\n      user_role: \"\",\n      updated: false,\n    };\n  }\n\n  onNameChange = (event) => {\n    this.setState({ user_name: event.target.value });\n  };\n\n  onEmailChange = (event) => {\n    this.setState({ user_email: event.target.value });\n  };\n\n  onPhoneChange = (event) => {\n    this.setState({ user_phone: event.target.value });\n  };\n\n  onButtonSubmit = () => {\n    fetch(\"https://enigmatic-journey-77724.herokuapp.com/editProfile\", {\n      method: \"put\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        user_name: this.state.user_name,\n        user_email: this.state.user_email,\n        user_id: this.state.user_id,\n        user_phone: this.state.user_phone,\n        user_role: this.state.user_role,\n      }),\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        if (data.user_id) {\n          this.setState({ updated: true });\n        }\n      })\n      .catch((err) => console.log(\"error\", err));\n  };\n\n  render() {\n    return (\n      <div>\n        <div className=\"register-form center br3 shadow-2 mt3\">\n          <main className=\"pa4 black-80\">\n            <div className=\"w-80 center\">\n              <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\n                <legend className=\"f1 fw6 ph0 mh0 tc\">\n                  Enter Updated Details\n                </legend>\n                <code>(Enter the fields that you want to update)</code>\n                <div className=\"mt3\">\n                  <label className=\"db fw6 lh-copy f6\" htmlFor=\"name\">\n                    Name\n                  </label>\n                  <input\n                    onChange={this.onNameChange}\n                    className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\n                    type=\"text\"\n                    name=\"name\"\n                    id=\"name\"\n                  />\n                </div>\n                <div className=\"mt3\">\n                  <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">\n                    Email\n                  </label>\n                  <input\n                    onChange={this.onEmailChange}\n                    className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\n                    type=\"email\"\n                    name=\"email-address\"\n                    id=\"email-address\"\n                  />\n                </div>\n                <div className=\"mv3\">\n                  <label className=\"db fw6 lh-copy f6\" htmlFor=\"phone\">\n                    Phone\n                  </label>\n                  <input\n                    onChange={this.onPhoneChange}\n                    className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\n                    type=\"text\"\n                    name=\"phone\"\n                    id=\"phone\"\n                  />\n                </div>\n              </fieldset>\n              <div>\n                <code className=\"tc red fw5\">\n                  {\" \"}\n                  {this.state.updated ? \"Updated Successfully\" : \"\"}\n                </code>\n              </div>\n              <div className=\"flex\">\n                <input\n                  onClick={this.onButtonSubmit}\n                  className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\"\n                  type=\"submit\"\n                  value=\"Submit\"\n                />\n              </div>\n            </div>\n          </main>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default EditProfile;\n","import React, { Component } from \"react\";\nclass center extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  onbuttonedit = () => {\n    this.props.sendData(this.props.center.center_id);\n    this.props.onProfileRouteChange(\"editCenter\");\n  };\n\n  onbuttondelete = () => {\n    fetch(\"https://enigmatic-journey-77724.herokuapp.com/deleteCenter\", {\n      method: \"post\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        center_id: this.props.center.center_id,\n      }),\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        if (data === 1 || data === \"1\") {\n          window.alert(\"center deleted\");\n          this.props.updatelist();\n        }\n      })\n      .catch((err) => console.log(err));\n  };\n\n  onbuttonshowstaff = () => {\n    this.props.sendData(this.props.center.center_id);\n    this.props.onProfileRouteChange(\"centerStaffs\");\n  };\n\n  onbuttonshowpatient = () => {\n    this.props.sendData(this.props.center.center_id);\n    this.props.onProfileRouteChange(\"centerPatients\");\n  };\n\n  render() {\n    const { center } = this.props;\n    return (\n      <React.Fragment>\n        <tr className=\"o-85\">\n          <td>{`${center.center_id}`}</td>\n          <td>{`${center.center_name}`}</td>\n          <td>{`${center.center_type_description}`}</td>\n          <td> {`${center.user_name}`} </td>\n          <td> {`${center.user_id}`} </td>\n          <td> {`${center.center_address}`} </td>\n          <td> {`${center.center_contact_number}`} </td>\n          <td> {`${center.number_staffs}`} </td>\n          <td> {`${center.number_patients}`} </td>\n          <td>\n            <div className=\"flex justify-center items-center\">\n              <input\n                onClick={this.onbuttonedit}\n                type=\"submit\"\n                value=\"Edit\"\n                className=\"grow mh2 pointer shadow-5 b ba b--black bg-transparent f6\"\n              />\n              <input\n                onClick={this.onbuttondelete}\n                type=\"submit\"\n                value=\"Delete\"\n                className=\"grow mh2 pointer shadow-5 b bg-transparent f6 red ba b--red\"\n              />\n              <div className=\"flex flex-column\">\n                <input\n                  onClick={this.onbuttonshowstaff}\n                  type=\"submit\"\n                  value=\"Show Staffs\"\n                  className=\"grow mh2 mv1 pointer shadow-5 b bg-transparent f6 blue ba b--blue\"\n                />\n                <input\n                  onClick={this.onbuttonshowpatient}\n                  type=\"submit\"\n                  value=\"Show Patients\"\n                  className=\"grow mh2 pointer shadow-5 b bg-transparent f6 blue ba b--blue\"\n                />\n              </div>\n            </div>\n          </td>\n        </tr>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default center;\n","import React, { Component } from \"react\";\nimport Center from \"./center\";\n\nclass ManageCenters extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      centers: [],\n    };\n  }\n\n  updatelist = () => {\n    fetch(\"https://enigmatic-journey-77724.herokuapp.com/center\")\n      .then((response) => response.json())\n      .then((centers) => {\n        this.setState({ centers });\n      })\n      .catch((err) => console.log(err));\n  };\n\n  componentDidMount() {\n    fetch(\"https://enigmatic-journey-77724.herokuapp.com/center\")\n      .then((response) => response.json())\n      .then((centers) => {\n        this.setState({ centers });\n      })\n      .catch((err) => console.log(err));\n    this.setState({ deleted: false });\n  }\n\n  render() {\n    const { user, onProfileRouteChange, sendData } = this.props;\n    return (\n      <div>\n        {user.role !== \"Center Manager\" ? (\n          <div className=\"new-center\">\n            <div\n              onClick={() => {\n                onProfileRouteChange(\"newCenter\");\n              }}\n              className=\"w-10 tc pa2 mt3 br3 grow bg-blue white b pointer shadow-5\"\n            >\n              Add New Center\n            </div>\n          </div>\n        ) : (\n          <React.Fragment></React.Fragment>\n        )}\n\n        {this.state.centers.length === 0 ? (\n          <div className=\"f3 mt3 fw6 pa2 o-50\">Loading...</div>\n        ) : (\n          <div className=\"scroll\">\n            <table className=\"mt3\">\n              <thead>\n                <tr>\n                  <th>Id</th>\n                  <th>Name</th>\n                  <th>Center Type</th>\n                  <th>Center Manager</th>\n                  <th>Center Manager Id</th>\n                  <th>Address</th>\n                  <th>Contact Number</th>\n                  <th>Staffs</th>\n                  <th>Patients</th>\n                  <th>Actions</th>\n                </tr>\n              </thead>\n              <tbody>\n                {this.state.centers.map((center) => {\n                  return (\n                    <Center\n                      key={center.center_id}\n                      user={user}\n                      onProfileRouteChange={onProfileRouteChange}\n                      center={center}\n                      sendData={sendData}\n                      updatelist={this.updatelist}\n                    />\n                  );\n                })}\n              </tbody>\n            </table>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default ManageCenters;\n","import React, { Component } from \"react\";\nclass User extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n  onbuttonedit = () => {\n    this.props.sendData(this.props.user.user_id);\n    this.props.onProfileRouteChange(\"editUser\");\n  };\n\n  onbuttondelete = () => {\n    fetch(\"https://enigmatic-journey-77724.herokuapp.com/deleteUser\", {\n      method: \"post\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        user_id: this.props.user.user_id,\n      }),\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        if (data === 1 || data === \"1\") {\n          window.alert(\"user deleted\");\n          this.props.updatelist();\n        }\n      })\n      .catch((err) => console.log(err));\n  };\n\n  render() {\n    const { user } = this.props;\n    return (\n      <React.Fragment>\n        <tr className=\"o-85\">\n          <td> {`${user.user_id}`} </td>\n          <td>{`${user.user_name}`}</td>\n          <td>{`${user.user_email}`}</td>\n          <td>{`${user.user_phone}`}</td>\n          <td>{`${user.user_role_name}`}</td>\n          <td>\n            <div className=\"flex justify-center items-center\">\n              <input\n                onClick={this.onbuttonedit}\n                type=\"submit\"\n                value=\"Edit\"\n                className=\"grow mh2 pointer shadow-5 b ba b--black bg-transparent f6\"\n              />\n              <input\n                onClick={this.onbuttondelete}\n                type=\"submit\"\n                value=\"Delete\"\n                className=\"grow mh2 pointer shadow-5 b bg-transparent f6 red ba b--red\"\n              />\n            </div>\n          </td>\n        </tr>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default User;\n","import React, { Component } from \"react\";\nimport User from \"./User\";\n\nclass ManageUsers extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      users: [],\n    };\n  }\n\n  updatelist = () => {\n    fetch(\"https://enigmatic-journey-77724.herokuapp.com/user\")\n      .then((response) => response.json())\n      .then((users) => {\n        this.setState({ users });\n      })\n      .catch((err) => console.log(err));\n  };\n\n  componentDidMount() {\n    fetch(\"https://enigmatic-journey-77724.herokuapp.com/user\")\n      .then((response) => response.json())\n      .then((users) => {\n        this.setState({ users: users });\n      })\n      .catch((err) => console.log(err));\n  }\n\n  render() {\n    const { sendData, onProfileRouteChange } = this.props;\n    return (\n      <div>\n        <div className=\"new-center\">\n          <div\n            onClick={() => {\n              onProfileRouteChange(\"newUser\");\n            }}\n            className=\"w-10 tc pa2 mt3 br3 grow bg-blue white b pointer shadow-5\"\n          >\n            Add New User\n          </div>\n        </div>\n        {this.state.users.length === 0 ? (\n          <div className=\"f3 mt3 fw6 pa2 o-50\">Loading...</div>\n        ) : (\n          <div className=\"scroll\">\n            <table className=\"mt3\">\n              <thead>\n                <tr>\n                  <th>Id</th>\n                  <th>Name</th>\n                  <th>Email</th>\n                  <th>Phone</th>\n                  <th>Role</th>\n                  <th>Actions</th>\n                </tr>\n              </thead>\n              <tbody>\n                {this.state.users.map((user) => {\n                  return (\n                    <User\n                      key={user.user_id}\n                      sendData={sendData}\n                      user={user}\n                      onProfileRouteChange={onProfileRouteChange}\n                      updatelist={this.updatelist}\n                    />\n                  );\n                })}\n              </tbody>\n            </table>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default ManageUsers;\n","import React, { Component } from \"react\";\n\nclass Staff extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n  onbuttonedit = () => {\n    this.props.sendData(this.props.staff.staff_id);\n    this.props.onProfileRouteChange(\"editStaff\");\n  };\n\n  onbuttondelete = () => {\n    fetch(\"https://enigmatic-journey-77724.herokuapp.com/deleteStaff\", {\n      method: \"post\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        staff_id: this.props.staff.staff_id,\n      }),\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        if (data === 1 || data === \"1\") {\n          window.alert(\"staff deleted\");\n          this.props.updatelist();\n        }\n      })\n      .catch((err) => console.log(err));\n  };\n\n  render() {\n    const { staff, profileRoute } = this.props;\n    return (\n      <React.Fragment>\n        <tr className=\"o-85\">\n          <td>{`${staff.staff_id}`}</td>\n          <td>{`${staff.staff_name}`}</td>\n          <td>{`${staff.staff_contact_number}`}</td>\n          <td>{`${staff.center_name}`}</td>\n          <td>{`${staff.role_name}`}</td>\n          <td>{`${staff.working_hours}`}</td>\n          {profileRoute !== \"centerStaffs\" ? (\n            <td>\n              <div className=\"flex justify-center items-center\">\n                <input\n                  onClick={this.onbuttonedit}\n                  type=\"submit\"\n                  value=\"Edit\"\n                  className=\"grow mh2 pointer shadow-5 b ba b--black bg-transparent f6\"\n                />\n                <input\n                  onClick={this.onbuttondelete}\n                  type=\"submit\"\n                  value=\"Delete\"\n                  className=\"grow mh2 pointer shadow-5 b bg-transparent f6 red ba b--red\"\n                />\n              </div>\n            </td>\n          ) : (\n            <React.Fragment></React.Fragment>\n          )}\n        </tr>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Staff;\n","import React, { Component } from \"react\";\nimport Staff from \"./Staff\";\n\nclass ManageStaffs extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      staffs: [],\n      center_id: \"\",\n    };\n  }\n\n  setCenterId = () => {\n    fetch(\"https://enigmatic-journey-77724.herokuapp.com/getcenteruser\", {\n      method: \"post\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        user_id: this.props.user.user_id,\n      }),\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        this.setState({ center_id: data.center_id });\n      })\n      .catch((err) => console.log(\"error\", err));\n  };\n\n  updatelist = () => {\n    fetch(\"https://enigmatic-journey-77724.herokuapp.com/staff\")\n      .then((response) => response.json())\n      .then((staffs) => {\n        this.setState({ staffs });\n      })\n      .catch((err) => console.log(err));\n  };\n\n  componentDidMount() {\n    this.setCenterId();\n    fetch(\"https://enigmatic-journey-77724.herokuapp.com/staff\")\n      .then((response) => response.json())\n      .then((staffs) => {\n        if (this.props.profileRoute === \"centerStaffs\") {\n          const temp = staffs.filter(\n            (staff) => staff.center_id === this.props.data\n          );\n          this.setState({ staffs: temp });\n        } else this.setState({ staffs: staffs });\n      })\n      .catch((err) => console.log(err));\n  }\n\n  render() {\n    const { user, sendData, onProfileRouteChange, profileRoute } = this.props;\n    return (\n      <div>\n        {user.role !== \"Center Manager\" && profileRoute !== \"centerStaffs\" ? (\n          <div className=\"newstaff\">\n            <div\n              onClick={() => {\n                onProfileRouteChange(\"newStaff\");\n              }}\n              className=\"w-10 tc pa2 mt3 br3 grow bg-blue white b pointer shadow-5\"\n            >\n              Add New Staff\n            </div>\n          </div>\n        ) : (\n          <React.Fragment></React.Fragment>\n        )}\n        {this.state.staffs.length === 0 ? (\n          <div className=\"f3 mt3 fw6 pa2 o-50\">Loading...</div>\n        ) : (\n          <div className=\"scroll\">\n            <table className=\"mt3\">\n              <thead>\n                <tr>\n                  <th>Id</th>\n                  <th>Name</th>\n                  <th>Contact Number</th>\n                  <th>Quarantine Center</th>\n                  <th>Role</th>\n                  <th>Working-Hours</th>\n                  {profileRoute !== \"centerStaffs\" ? (\n                    <th>Actions</th>\n                  ) : (\n                    <React.Fragment></React.Fragment>\n                  )}\n                </tr>\n              </thead>\n              <tbody>\n                {this.state.staffs.map((staff) => {\n                  if (user.user_role_name === \"Center Manager\") {\n                    if (this.state.center_id === staff.center_id) {\n                      return (\n                        <Staff\n                          key={staff.staff_id}\n                          sendData={sendData}\n                          user={user}\n                          onProfileRouteChange={onProfileRouteChange}\n                          staff={staff}\n                          updatelist={this.updatelist}\n                          profileRoute={profileRoute}\n                        />\n                      );\n                    } else return null;\n                  } else {\n                    return (\n                      <Staff\n                        key={staff.staff_id}\n                        sendData={sendData}\n                        user={user}\n                        onProfileRouteChange={onProfileRouteChange}\n                        staff={staff}\n                        updatelist={this.updatelist}\n                        profileRoute={profileRoute}\n                      />\n                    );\n                  }\n                })}\n              </tbody>\n            </table>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default ManageStaffs;\n","import React, { Component } from \"react\";\nclass Patient extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  onbuttonedit = () => {\n    this.props.sendData(this.props.patient.patient_id);\n    this.props.onProfileRouteChange(\"editPatient\");\n  };\n\n  onbuttondelete = () => {\n    fetch(\"https://enigmatic-journey-77724.herokuapp.com/deletePatient\", {\n      method: \"post\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        patient_id: this.props.patient.patient_id,\n      }),\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        if (data === 1 || data === \"1\") {\n          window.alert(\"patient deleted\");\n          this.props.updatelist();\n        }\n      })\n      .catch((err) => console.log(err));\n  };\n\n  render() {\n    const { patient, profileRoute } = this.props;\n    return (\n      <React.Fragment>\n        <tr className=\"o-85\">\n          <td>{`${patient.patient_id}`}</td>\n          <td>{`${patient.patient_name}`}</td>\n          <td>{`${patient.patient_address}`}</td>\n          <td>{`${patient.center_name}`}</td>\n          <td>{`${patient.date_of_admission}`}</td>\n          <td>{`${patient.stay_duration}`}</td>\n          <td>{`${patient.patient_status}`}</td>\n          {profileRoute !== \"centerPatients\" ? (\n            <td>\n              <div className=\"flex justify-center items-center\">\n                <input\n                  onClick={this.onbuttonedit}\n                  type=\"submit\"\n                  value=\"Edit\"\n                  className=\"grow mh2 pointer shadow-5 b ba b--black bg-transparent f6\"\n                />\n                <input\n                  onClick={this.onbuttondelete}\n                  type=\"submit\"\n                  value=\"Delete\"\n                  className=\"grow mh2 pointer shadow-5 b bg-transparent f6 red ba b--red\"\n                />\n              </div>\n            </td>\n          ) : (\n            <React.Fragment></React.Fragment>\n          )}\n        </tr>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Patient;\n","import React, { Component } from \"react\";\nimport Patient from \"./Patient\";\n\nclass ManagePatients extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      patients: [],\n      center_id: \"\",\n    };\n  }\n\n  setCenterId = () => {\n    fetch(\"https://enigmatic-journey-77724.herokuapp.com/getcenteruser\", {\n      method: \"post\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        user_id: this.props.user.user_id,\n      }),\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        this.setState({ center_id: data.center_id });\n      })\n      .catch((err) => console.log(\"error\", err));\n  };\n\n  updatelist = () => {\n    fetch(\"https://enigmatic-journey-77724.herokuapp.com/patient\")\n      .then((response) => response.json())\n      .then((patients) => {\n        this.setState({ patients });\n      })\n      .catch((err) => console.log(err));\n  };\n\n  componentDidMount() {\n    this.setCenterId();\n    fetch(\"https://enigmatic-journey-77724.herokuapp.com/patient\")\n      .then((response) => response.json())\n      .then((patients) => {\n        if (this.props.profileRoute === \"centerPatients\") {\n          const temp = patients.filter(\n            (patient) => patient.center_id === this.props.data\n          );\n          this.setState({ patients: temp });\n        } else {\n          this.setState({ patients: patients });\n        }\n      })\n      .catch((err) => console.log(err));\n  }\n\n  render() {\n    const { user, sendData, onProfileRouteChange, profileRoute } = this.props;\n    return (\n      <div>\n        {profileRoute !== \"centerPatients\" ? (\n          <div className=\"new-Patient\">\n            <div\n              onClick={() => {\n                onProfileRouteChange(\"newPatient\");\n              }}\n              className=\"w-10 tc pa2 mt3 br3 grow bg-blue white b pointer shadow-5\"\n            >\n              Add New Patient\n            </div>\n          </div>\n        ) : (\n          <React.Fragment></React.Fragment>\n        )}\n        {this.state.patients.length === 0 ? (\n          <div className=\"f3 mt3 fw6 pa2 o-50\">Loading...</div>\n        ) : (\n          <div className=\"scroll\">\n            <table className=\"mt3\">\n              <thead>\n                <tr>\n                  <th>Id</th>\n                  <th>Name</th>\n                  <th>Address</th>\n                  <th>Quarantine Center</th>\n                  <th>Date of Admission</th>\n                  <th>Stay Duration</th>\n                  <th>Status</th>\n                  {profileRoute !== \"centerPatients\" ? (\n                    <th>Actions</th>\n                  ) : (\n                    <React.Fragment></React.Fragment>\n                  )}\n                </tr>\n              </thead>\n              <tbody>\n                {this.state.patients.map((patient) => {\n                  if (user.user_role_name === \"Center Manager\") {\n                    if (this.state.center_id === patient.center_id) {\n                      return (\n                        <Patient\n                          key={patient.patient_id}\n                          sendData={sendData}\n                          user={user}\n                          onProfileRouteChange={onProfileRouteChange}\n                          patient={patient}\n                          updatelist={this.updatelist}\n                          profileRoute={profileRoute}\n                        />\n                      );\n                    } else return null;\n                  } else {\n                    return (\n                      <Patient\n                        key={patient.patient_id}\n                        sendData={sendData}\n                        user={user}\n                        onProfileRouteChange={onProfileRouteChange}\n                        patient={patient}\n                        updatelist={this.updatelist}\n                        profileRoute={profileRoute}\n                      />\n                    );\n                  }\n                })}\n              </tbody>\n            </table>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default ManagePatients;\n","import React, { Component } from \"react\";\nclass center extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n  onbuttondelete = () => {\n    fetch(\"https://enigmatic-journey-77724.herokuapp.com/deleteRequest\", {\n      method: \"post\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        request_id: this.props.request.request_id,\n      }),\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        if (data === 1 || data === \"1\") {\n          window.alert(\"request deleted\");\n          this.props.updatelist();\n        }\n      })\n      .catch((err) => console.log(err));\n  };\n\n  onbuttonprocess = () => {\n    fetch(\"https://enigmatic-journey-77724.herokuapp.com/requestActions\", {\n      method: \"post\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        request_id: this.props.request.request_id,\n        user_id: this.props.user.user_id,\n        status_id: 2,\n      }),\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        if (data === 1 || data === \"1\") {\n          window.alert(\"request processed\");\n          this.props.updatelist();\n        }\n      })\n      .catch((err) => console.log(err));\n  };\n\n  onbuttondiscard = () => {\n    fetch(\"https://enigmatic-journey-77724.herokuapp.com/requestActions\", {\n      method: \"post\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        request_id: this.props.request.request_id,\n        user_id: this.props.user.user_id,\n        status_id: 3,\n      }),\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        if (data === 1 || data === \"1\") {\n          window.alert(\"request discarded\");\n          this.props.updatelist();\n        }\n      })\n      .catch((err) => console.log(err));\n  };\n\n  render() {\n    const { user, request } = this.props;\n    return (\n      <React.Fragment>\n        <tr className=\"o-85\">\n          <td> {`${request.request_id}`} </td>\n          <td> {`${request.center_name}`} </td>\n          <td> {`${request.request_description}`} </td>\n          <td> {`${request.status_name}`} </td>\n          <td>\n            {\" \"}\n            {`${\n              request.user_id !== null\n                ? `${request.user_name}/(${request.user_id})`\n                : \"Pending\"\n            }`}{\" \"}\n          </td>\n\n          <td>\n            <div className=\"flex justify-center items-center\">\n              {user.user_role_name !== \"Center Manager\" &&\n              request.status_id === 1 ? (\n                <input\n                  onClick={this.onbuttonprocess}\n                  type=\"submit\"\n                  value=\"Process\"\n                  className=\"grow mh2 pointer shadow-5 b ba b--blue blue bg-transparent f6\"\n                />\n              ) : (\n                \"\"\n              )}\n\n              {user.user_role_name !== \"Government Official\" ? (\n                <input\n                  onClick={this.onbuttondelete}\n                  type=\"submit\"\n                  value=\"Delete\"\n                  className=\"grow mh2 pointer shadow-5 b bg-transparent f6 red ba b--red\"\n                />\n              ) : (\n                \"\"\n              )}\n\n              {user.user_role_name !== \"Center Manager\" &&\n              request.status_id === 1 ? (\n                <input\n                  onClick={this.onbuttondiscard}\n                  type=\"submit\"\n                  value=\"Discard\"\n                  className=\"grow mh2 pointer shadow-5 b bg-transparent f6 yellow ba b--yellow\"\n                />\n              ) : (\n                \"\"\n              )}\n            </div>\n          </td>\n        </tr>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default center;\n","import React, { Component } from \"react\";\nimport Request from \"./Request\";\n\nclass ManageRequests extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      requests: [],\n      center_id: \"\",\n      filter: \"\",\n    };\n  }\n\n  setCenterId = () => {\n    fetch(\"https://enigmatic-journey-77724.herokuapp.com/getcenteruser\", {\n      method: \"post\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        user_id: this.props.user.user_id,\n      }),\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        this.setState({ center_id: data.center_id });\n      })\n      .catch((err) => console.log(\"error\", err));\n  };\n\n  updatelist = () => {\n    fetch(\"https://enigmatic-journey-77724.herokuapp.com/request\")\n      .then((response) => response.json())\n      .then((requests) => {\n        this.setState({ requests });\n      })\n      .catch((err) => console.log(err));\n  };\n\n  componentDidMount() {\n    this.setCenterId();\n    fetch(\"https://enigmatic-journey-77724.herokuapp.com/request\")\n      .then((response) => response.json())\n      .then((requests) => {\n        this.setState({ requests });\n      })\n      .catch((err) => console.log(err));\n  }\n\n  onfilter = (event) => {\n    this.updatelist();\n    this.setState({ filter: event.target.value });\n    if (this.state.filter === \"Unsolved\") {\n      const temp = this.state.requests.filter((req) => {\n        return req.status_id === 1;\n      });\n      console.log(temp);\n      this.setState({ requests: temp });\n    } else if (this.state.filter === \"Processed\") {\n      const temp = this.state.requests.filter((req) => {\n        return req.status_id === 2;\n      });\n      console.log(temp);\n      this.setState({ requests: temp });\n    } else if (this.state.filter === \"Discarded\") {\n      const temp = this.state.requests.filter((req) => {\n        return req.status_id === 3;\n      });\n      console.log(temp);\n      this.setState({ requests: temp });\n    } else this.updatelist();\n  };\n\n  render() {\n    const { user, onProfileRouteChange, sendData } = this.props;\n    return (\n      <div>\n        <div className=\"new-request\">\n          {user.user_role_name !== \"Government Official\" ? (\n            <div\n              onClick={() => {\n                onProfileRouteChange(\"newRequest\");\n              }}\n              className=\"w-10 tc pa2 mt3 br3 grow bg-blue white b pointer shadow-5\"\n            >\n              Add New Request\n            </div>\n          ) : (\n            <React.Fragment></React.Fragment>\n          )}\n        </div>\n        {this.state.requests.length === 0 ? (\n          <div className=\"f3 mt3 fw6 pa2 o-50\">Loading...</div>\n        ) : (\n          <div className=\"scroll-req\">\n            <table className=\"mt3\">\n              <thead>\n                <tr>\n                  <th>Request Id</th>\n                  <th>Quarantine Center</th>\n                  <th>Request Descreption</th>\n                  <th>Request Status</th>\n                  <th>User Name/(Id) (User who responded) </th>\n                  <th>Actions</th>\n                </tr>\n              </thead>\n              <tbody>\n                {this.state.requests.map((request) => {\n                  if (user.user_role_name === \"Center Manager\") {\n                    if (this.state.center_id === request.center_id) {\n                      return (\n                        <Request\n                          key={request.request_id}\n                          user={user}\n                          onProfileRouteChange={onProfileRouteChange}\n                          request={request}\n                          sendData={sendData}\n                          updatelist={this.updatelist}\n                        />\n                      );\n                    } else return null;\n                  } else {\n                    return (\n                      <Request\n                        key={request.request_id}\n                        user={user}\n                        onProfileRouteChange={onProfileRouteChange}\n                        request={request}\n                        sendData={sendData}\n                        updatelist={this.updatelist}\n                      />\n                    );\n                  }\n                })}\n              </tbody>\n            </table>\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default ManageRequests;\n","import React, { Component } from \"react\";\n\nclass NewCenter extends Component {\n  state = {\n    center_type: [],\n    center_name: \"\",\n    center_address: \"\",\n    center_contact_number: \"\",\n    center_type_id: \"\",\n    user_id: \"\",\n  };\n\n  onbuttonsubmit = () => {\n    fetch(\"https://enigmatic-journey-77724.herokuapp.com/newCenter\", {\n      method: \"post\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        center_name: this.state.center_name,\n        center_address: this.state.center_address,\n        center_contact_number: this.state.center_contact_number,\n        center_type_id: this.state.center_type_id,\n        user_id: this.state.user_id,\n      }),\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        if (data.center_id) {\n          window.alert(\"Center created\");\n        }\n      })\n      .catch((err) => console.log(\"error\", err));\n  };\n\n  componentDidMount() {\n    fetch(\"https://enigmatic-journey-77724.herokuapp.com/centerType\")\n      .then((response) => response.json())\n      .then((data) => {\n        if (data[0].center_type_id) {\n          this.setState({ center_type: data });\n        }\n      })\n      .catch((err) => console.log(err));\n  }\n\n  onNameChange = (event) => {\n    this.setState({ center_name: event.target.value });\n  };\n  onaddressChange = (event) => {\n    this.setState({ center_address: event.target.value });\n  };\n  oncontact_numberChange = (event) => {\n    this.setState({ center_contact_number: event.target.value });\n  };\n  ontype_idChange = (event) => {\n    this.setState({ center_type_id: event.target.value });\n  };\n  onidChange = (event) => {\n    this.setState({ user_id: event.target.value });\n  };\n\n  render() {\n    return (\n      <div className=\"register-form br3 flex flex-column items-center center shadow-3 mt3\">\n        <main className=\"pa4 black-80\">\n          <div className=\"measure \">\n            <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\n              <legend className=\"f1 fw6 ph0 mh0\">Enter center details</legend>\n              <div className=\"mt3\">\n                <label className=\"db fw6 lh-copy f6\" htmlFor=\"name\">\n                  Name\n                </label>\n                <input\n                  onChange={this.onNameChange}\n                  className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\n                  type=\"text\"\n                  name=\"name\"\n                  id=\"name\"\n                />\n              </div>\n              <div className=\"mt3\">\n                <label className=\"db fw6 lh-copy f6\" htmlFor=\"center-address\">\n                  Address\n                </label>\n                <input\n                  onChange={this.onaddressChange}\n                  className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\n                  type=\"text\"\n                  name=\"center-address\"\n                  id=\"center-address\"\n                />\n              </div>\n              <div className=\"mv3\">\n                <label className=\"db fw6 lh-copy f6\" htmlFor=\"centerTypeId\">\n                  Center Type Id\n                </label>\n                <div>\n                  {this.state.center_type.map((type) => {\n                    return (\n                      <div key={type.center_type_id}>\n                        <code>{`${type.center_type_id} : ${type.center_type_description}`}</code>\n                      </div>\n                    );\n                  })}\n                </div>\n\n                <input\n                  onChange={this.ontype_idChange}\n                  className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\n                  type=\"text\"\n                  name=\"centerTypeId\"\n                  id=\"centerTypeId\"\n                />\n              </div>\n              <div className=\"mv3\">\n                <label className=\"db fw6 lh-copy f6\" htmlFor=\"Phone\">\n                  Phone\n                </label>\n                <input\n                  onChange={this.oncontact_numberChange}\n                  className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\n                  type=\"text\"\n                  name=\"Phone\"\n                  id=\"Phone\"\n                />\n              </div>\n\n              <div className=\"mv3\">\n                <label className=\"db fw6 lh-copy f6\" htmlFor=\"userid\">\n                  User Id of the Center Manager\n                </label>\n                <code className=\"red\">\n                  Make sure that the user is a center manager and is not\n                  assigned any center before. Otherwise a center with null\n                  manager will be created\n                </code>\n                <input\n                  onChange={this.onidChange}\n                  className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\n                  type=\"text\"\n                  name=\"userid\"\n                  id=\"userid\"\n                />\n              </div>\n            </fieldset>\n            <div className=\"\">\n              <input\n                onClick={this.onbuttonsubmit}\n                className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\"\n                type=\"submit\"\n                value=\"Submit\"\n              />\n            </div>\n          </div>\n        </main>\n      </div>\n    );\n  }\n}\n\nexport default NewCenter;\n","import React, { Component } from \"react\";\n\nclass NewStaff extends Component {\n  state = {\n    role: [],\n    staff_name: \"\",\n    working_hours: \"\",\n    staff_contact_number: \"\",\n    role_id: \"\",\n    center_id: \"\",\n  };\n\n  onbuttonsubmit = () => {\n    fetch(\"https://enigmatic-journey-77724.herokuapp.com/newStaff\", {\n      method: \"post\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        staff_name: this.state.staff_name,\n        working_hours: this.state.working_hours,\n        staff_contact_number: this.state.staff_contact_number,\n        role_id: this.state.role_id,\n        center_id: this.state.center_id,\n      }),\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        if (data.staff_id) {\n          window.alert(\"staff created\");\n        }\n      })\n      .catch((err) => console.log(\"error\", err));\n  };\n\n  componentDidMount() {\n    fetch(\"https://enigmatic-journey-77724.herokuapp.com/staffrole\")\n      .then((response) => response.json())\n      .then((data) => {\n        if (data[0].role_id) {\n          this.setState({ role: data });\n        }\n      })\n      .catch((err) => console.log(err));\n  }\n\n  onNameChange = (event) => {\n    this.setState({ staff_name: event.target.value });\n  };\n  onWorking_hoursChange = (event) => {\n    this.setState({ working_hours: event.target.value });\n  };\n  oncontact_numberChange = (event) => {\n    this.setState({ staff_contact_number: event.target.value });\n  };\n  onRole_idChange = (event) => {\n    this.setState({ role_id: event.target.value });\n  };\n  onidChange = (event) => {\n    this.setState({ center_id: event.target.value });\n  };\n  render() {\n    return (\n      <div className=\"register-form br3 flex flex-column items-center center shadow-3 mt3\">\n        <main className=\"pa4 black-80\">\n          <div className=\"measure \">\n            <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\n              <legend className=\"f1 fw6 ph0 mh0\">Enter staff details</legend>\n              <div className=\"mt3\">\n                <label className=\"db fw6 lh-copy f6\" htmlFor=\"name\">\n                  Name\n                </label>\n                <input\n                  onChange={this.onNameChange}\n                  className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\n                  type=\"text\"\n                  name=\"name\"\n                  id=\"name\"\n                />\n              </div>\n              <div className=\"mt3\">\n                <label className=\"db fw6 lh-copy f6\" htmlFor=\"working-hours\">\n                  Working Hours (eg: 900-1600)\n                </label>\n                <input\n                  onChange={this.onWorking_hoursChange}\n                  className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\n                  type=\"text\"\n                  name=\"working-hours\"\n                  id=\"working-hours\"\n                />\n              </div>\n              <div className=\"mv3\">\n                <label className=\"db fw6 lh-copy f6\" htmlFor=\"Role\">\n                  Role_id\n                </label>\n                <div className=\"flex\">\n                  {this.state.role.map((type) => {\n                    return (\n                      <div key={type.role_id}>\n                        <code>{`${type.role_id} : ${type.role_name}`}</code>\n                      </div>\n                    );\n                  })}\n                </div>\n                <input\n                  onChange={this.onRole_idChange}\n                  className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\n                  type=\"text\"\n                  name=\"Role\"\n                  id=\"Role\"\n                />\n              </div>\n              <div className=\"mv3\">\n                <label className=\"db fw6 lh-copy f6\" htmlFor=\"Contact\">\n                  Contact Number\n                </label>\n                <input\n                  onChange={this.oncontact_numberChange}\n                  className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\n                  type=\"text\"\n                  name=\"Contact\"\n                  id=\"Contact\"\n                />\n              </div>\n              <div className=\"mv3\">\n                <label className=\"db fw6 lh-copy f6\" htmlFor=\"Center-id\">\n                  Center Id (where the staff is going to work)\n                </label>\n                <code className=\"red\">Make sure that center exists.</code>\n                <input\n                  onChange={this.onidChange}\n                  className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\n                  type=\"text\"\n                  name=\"Center-id\"\n                  id=\"Center-id\"\n                />\n              </div>\n            </fieldset>\n            <div className=\"\">\n              <input\n                onClick={this.onbuttonsubmit}\n                className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\"\n                type=\"submit\"\n                value=\"Submit\"\n              />\n            </div>\n          </div>\n        </main>\n      </div>\n    );\n  }\n}\n\nexport default NewStaff;\n","import React, { Component } from \"react\";\n\nclass NewService extends Component {\n  state = {\n    center_id: \"\",\n    request_description: \"\",\n  };\n\n  onbuttonsubmit = () => {\n    fetch(\"https://enigmatic-journey-77724.herokuapp.com/newRequest\", {\n      method: \"post\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        center_id: this.state.center_id,\n        request_description: this.state.request_description,\n      }),\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        if (data.request_id) {\n          window.alert(\"Request created\");\n        }\n      })\n      .catch((err) => console.log(\"error\", err));\n  };\n\n  onCenterIdChange = (event) => {\n    this.setState({ center_id: event.target.value });\n  };\n  onReqDescriptionChange = (event) => {\n    this.setState({ request_description: event.target.value });\n  };\n\n  render() {\n    return (\n      <div className=\"register-form br3 flex flex-column items-center center shadow-3 mt3\">\n        <main className=\"pa4 black-80\">\n          <div className=\"measure \">\n            <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\n              <legend className=\"f1 fw6 ph0 mh0\">Enter service details</legend>\n              <div className=\"mt3\">\n                <label className=\"db fw6 lh-copy f6\" htmlFor=\"center\">\n                  Center Id\n                </label>\n                <input\n                  onChange={this.onCenterIdChange}\n                  className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\n                  type=\"text\"\n                  name=\"center\"\n                  id=\"center\"\n                />\n              </div>\n              <div className=\"mt3\">\n                <label className=\"db fw6 lh-copy f6\" htmlFor=\"name\">\n                  Descreption\n                </label>\n                <input\n                  onChange={this.onReqDescriptionChange}\n                  className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\n                  type=\"text\"\n                  name=\"name\"\n                  id=\"name\"\n                />\n              </div>\n            </fieldset>\n            <div className=\"\">\n              <input\n                onClick={this.onbuttonsubmit}\n                className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\"\n                type=\"submit\"\n                value=\"Submit\"\n              />\n            </div>\n          </div>\n        </main>\n      </div>\n    );\n  }\n}\n\nexport default NewService;\n","import React, { Component } from \"react\";\n\nclass NewUser extends Component {\n  state = {\n    role: [],\n    user_name: \"\",\n    user_email: \"\",\n    user_phone: \"\",\n    user_role_id: \"\",\n  };\n\n  onbuttonsubmit = () => {\n    fetch(\"https://enigmatic-journey-77724.herokuapp.com/newUser\", {\n      method: \"post\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        user_name: this.state.user_name,\n        user_email: this.state.user_email,\n        user_phone: this.state.user_phone,\n        user_role_id: this.state.user_role_id,\n      }),\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        if (data.user_id) {\n          window.alert(\"user created\");\n        }\n      })\n      .catch((err) => console.log(\"error\", err));\n  };\n\n  componentDidMount() {\n    fetch(\"https://enigmatic-journey-77724.herokuapp.com/userrole\")\n      .then((response) => response.json())\n      .then((data) => {\n        if (data[0].user_role_id) {\n          this.setState({ role: data });\n        }\n      })\n      .catch((err) => console.log(err));\n  }\n\n  onNameChange = (event) => {\n    this.setState({ user_name: event.target.value });\n  };\n  onuser_emailChange = (event) => {\n    this.setState({ user_email: event.target.value });\n  };\n  oncontact_numberChange = (event) => {\n    this.setState({ user_phone: event.target.value });\n  };\n  onuser_Role_idChange = (event) => {\n    this.setState({ user_role_id: event.target.value });\n  };\n\n  render() {\n    return (\n      <div className=\"register-form br3 flex flex-column items-center center shadow-3 mt3\">\n        <main className=\"pa4 black-80\">\n          <div className=\"measure \">\n            <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\n              <legend className=\"f1 fw6 ph0 mh0\">Enter user details</legend>\n              <div className=\"mt3\">\n                <label className=\"db fw6 lh-copy f6\" htmlFor=\"name\">\n                  Name\n                </label>\n                <input\n                  onChange={this.onNameChange}\n                  className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\n                  type=\"text\"\n                  name=\"name\"\n                  id=\"name\"\n                />\n              </div>\n              <div className=\"mt3\">\n                <label className=\"db fw6 lh-copy f6\" htmlFor=\"email\">\n                  Email\n                </label>\n                <input\n                  onChange={this.onuser_emailChange}\n                  className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\n                  type=\"email\"\n                  name=\"email-address\"\n                  id=\"email-address\"\n                />\n              </div>\n              <div className=\"mv3\">\n                <label className=\"db fw6 lh-copy f6\" htmlFor=\"Role\">\n                  Role\n                </label>\n                <div className=\"flex\">\n                  {this.state.role.map((type) => {\n                    return (\n                      <div key={type.user_role_id}>\n                        <code>{`${type.user_role_id} : ${type.user_role_name}`}</code>\n                      </div>\n                    );\n                  })}\n                </div>\n                <input\n                  onChange={this.onuser_Role_idChange}\n                  className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\n                  type=\"text\"\n                  name=\"Role\"\n                  id=\"Role\"\n                />\n              </div>\n              <div className=\"mv3\">\n                <label className=\"db fw6 lh-copy f6\" htmlFor=\"Phone\">\n                  Phone\n                </label>\n                <input\n                  onChange={this.oncontact_numberChange}\n                  className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\n                  type=\"text\"\n                  name=\"Phone\"\n                  id=\"Phone\"\n                />\n              </div>\n            </fieldset>\n            <div className=\"\">\n              <input\n                onClick={this.onbuttonsubmit}\n                className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\"\n                type=\"submit\"\n                value=\"Submit\"\n              />\n            </div>\n          </div>\n        </main>\n      </div>\n    );\n  }\n}\n\nexport default NewUser;\n","import React, { Component } from \"react\";\n\nclass NewPatient extends Component {\n  state = {\n    patient_name: \"\",\n    patient_address: \"\",\n    date_of_admission: \"\",\n    stay_duration: \"\",\n    patient_status: \"\",\n    center_id: \"\",\n  };\n\n  onbuttonsubmit = () => {\n    fetch(\"https://enigmatic-journey-77724.herokuapp.com/newPatient\", {\n      method: \"post\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify(this.state),\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        if (data.patient_id) {\n          window.alert(\"patient created\");\n        }\n      })\n      .catch((err) => console.log(\"error\", err));\n  };\n\n  onNameChange = (event) => {\n    this.setState({ patient_name: event.target.value });\n  };\n  onaddressChange = (event) => {\n    this.setState({ patient_address: event.target.value });\n  };\n  onstatusChange = (event) => {\n    this.setState({ patient_status: event.target.value });\n  };\n  ondateofadmissionChange = (event) => {\n    this.setState({ date_of_admission: event.target.value });\n  };\n  ondurationChange = (event) => {\n    this.setState({ stay_duration: event.target.value });\n  };\n\n  onidchange = (event) => {\n    this.setState({ center_id: event.target.value });\n  };\n\n  render() {\n    return (\n      <div className=\"register-form br3 flex flex-column items-center center shadow-3 mt3\">\n        <main className=\"pa4 black-80\">\n          <div className=\"measure \">\n            <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\n              <legend className=\"f1 fw6 ph0 mh0\">Enter Patient details</legend>\n              <div className=\"mt3\">\n                <label className=\"db fw6 lh-copy f6\" htmlFor=\"name\">\n                  Name\n                </label>\n                <input\n                  onChange={this.onNameChange}\n                  className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\n                  type=\"text\"\n                  name=\"name\"\n                  id=\"name\"\n                />\n              </div>\n              <div className=\"mt3\">\n                <label className=\"db fw6 lh-copy f6\" htmlFor=\"center-address\">\n                  Address\n                </label>\n                <input\n                  onChange={this.onaddressChange}\n                  className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\n                  type=\"text\"\n                  name=\"center-address\"\n                  id=\"center-address\"\n                />\n              </div>\n              <div className=\"mv3\">\n                <label className=\"db fw6 lh-copy f6\" htmlFor=\"centerTypeId\">\n                  Date of admission\n                </label>\n\n                <input\n                  onChange={this.ondateofadmissionChange}\n                  className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\n                  type=\"text\"\n                  name=\"centerTypeId\"\n                  id=\"centerTypeId\"\n                />\n              </div>\n              <div className=\"mv3\">\n                <label className=\"db fw6 lh-copy f6\" htmlFor=\"Phone\">\n                  Stay Duration (in days)\n                </label>\n                <input\n                  onChange={this.ondurationChange}\n                  className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\n                  type=\"text\"\n                  name=\"Phone\"\n                  id=\"Phone\"\n                />\n              </div>\n\n              <div className=\"mv3\">\n                <label className=\"db fw6 lh-copy f6\" htmlFor=\"status\">\n                  Patient Status\n                </label>\n                <input\n                  onChange={this.onstatusChange}\n                  className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\n                  type=\"text\"\n                  name=\"status\"\n                  id=\"status\"\n                />\n              </div>\n\n              <div className=\"mv3\">\n                <label className=\"db fw6 lh-copy f6\" htmlFor=\"centerid\">\n                  Center Id\n                </label>\n                <code className=\"red\">The center must exist</code>\n                <input\n                  onChange={this.onidchange}\n                  className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\n                  type=\"text\"\n                  name=\"centerid\"\n                  id=\"centerid\"\n                />\n              </div>\n            </fieldset>\n            <div className=\"\">\n              <input\n                onClick={this.onbuttonsubmit}\n                className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\"\n                type=\"submit\"\n                value=\"Submit\"\n              />\n            </div>\n          </div>\n        </main>\n      </div>\n    );\n  }\n}\n\nexport default NewPatient;\n","import React, { Component } from \"react\";\n\nclass EditCenter extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      center_type: [],\n      center_id: this.props.data,\n      center_name: \"\",\n      center_address: \"\",\n      center_contact_number: \"\",\n      center_type_id: \"\",\n      user_id: \"\",\n    };\n  }\n\n  onbuttonsubmit = () => {\n    fetch(\"https://enigmatic-journey-77724.herokuapp.com/editCenter\", {\n      method: \"put\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        center_id: this.state.center_id,\n        center_name: this.state.center_name,\n        center_address: this.state.center_address,\n        center_contact_number: this.state.center_contact_number,\n        center_type_id: this.state.center_type_id,\n        user_id: this.state.user_id,\n      }),\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        if (data.center_id) {\n          window.alert(\"Center Updated\");\n        }\n      })\n      .catch((err) => console.log(\"error\", err));\n  };\n\n  componentDidMount() {\n    fetch(\"https://enigmatic-journey-77724.herokuapp.com/centerType\")\n      .then((response) => response.json())\n      .then((data) => {\n        if (data[0].center_type_id) {\n          this.setState({ center_type: data });\n        }\n      })\n      .catch((err) => console.log(err));\n  }\n\n  onNameChange = (event) => {\n    this.setState({ center_name: event.target.value });\n  };\n  onaddressChange = (event) => {\n    this.setState({ center_address: event.target.value });\n  };\n  oncontact_numberChange = (event) => {\n    this.setState({ center_contact_number: event.target.value });\n  };\n  ontype_idChange = (event) => {\n    this.setState({ center_type_id: event.target.value });\n  };\n  onidChange = (event) => {\n    this.setState({ user_id: event.target.value });\n  };\n\n  render() {\n    return (\n      <div className=\"register-form br3 flex flex-column items-center center shadow-3 mt3\">\n        <main className=\"pa4 black-80\">\n          <div className=\"measure \">\n            <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\n              <legend className=\"f1 fw6 ph0 mh0\">\n                Enter updated center details\n              </legend>\n              <code>Only non empty fields will be updated</code>\n              <div className=\"mt3\">\n                <label className=\"db fw6 lh-copy f6\" htmlFor=\"name\">\n                  Name\n                </label>\n                <input\n                  onChange={this.onNameChange}\n                  className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\n                  type=\"text\"\n                  name=\"name\"\n                  id=\"name\"\n                />\n              </div>\n              <div className=\"mt3\">\n                <label className=\"db fw6 lh-copy f6\" htmlFor=\"center-address\">\n                  Address\n                </label>\n                <input\n                  onChange={this.onaddressChange}\n                  className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\n                  type=\"text\"\n                  name=\"center-address\"\n                  id=\"center-address\"\n                />\n              </div>\n              <div className=\"mv3\">\n                <label className=\"db fw6 lh-copy f6\" htmlFor=\"centerTypeId\">\n                  Center Type Id\n                </label>\n                <div>\n                  {this.state.center_type.map((type) => {\n                    return (\n                      <div key={type.center_type_id}>\n                        <code>{`${type.center_type_id} : ${type.center_type_description}`}</code>\n                      </div>\n                    );\n                  })}\n                </div>\n\n                <input\n                  onChange={this.ontype_idChange}\n                  className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\n                  type=\"text\"\n                  name=\"centerTypeId\"\n                  id=\"centerTypeId\"\n                />\n              </div>\n              <div className=\"mv3\">\n                <label className=\"db fw6 lh-copy f6\" htmlFor=\"Phone\">\n                  Phone\n                </label>\n                <input\n                  onChange={this.oncontact_numberChange}\n                  className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\n                  type=\"text\"\n                  name=\"Phone\"\n                  id=\"Phone\"\n                />\n              </div>\n\n              <div className=\"mv3\">\n                <label className=\"db fw6 lh-copy f6\" htmlFor=\"userid\">\n                  User Id of the Center Manager\n                </label>\n                <code className=\"red\">\n                  Make sure that the user is a center manager and is not\n                  assigned any center before.\n                </code>\n                <input\n                  onChange={this.onidChange}\n                  className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\n                  type=\"text\"\n                  name=\"userid\"\n                  id=\"userid\"\n                />\n              </div>\n            </fieldset>\n            <div className=\"\">\n              <input\n                onClick={this.onbuttonsubmit}\n                className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\"\n                type=\"submit\"\n                value=\"Submit\"\n              />\n            </div>\n          </div>\n        </main>\n      </div>\n    );\n  }\n}\n\nexport default EditCenter;\n","import React, { Component } from \"react\";\n\nclass EditPatient extends Component {\n  state = {\n    patient_id: this.props.data,\n    patient_name: \"\",\n    patient_address: \"\",\n    date_of_admission: \"\",\n    stay_duration: \"\",\n    patient_status: \"\",\n    center_id: \"\",\n  };\n\n  onbuttonsubmit = () => {\n    fetch(\"https://enigmatic-journey-77724.herokuapp.com/editPatient\", {\n      method: \"post\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify(this.state),\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        if (data.patient_id) {\n          window.alert(\"Patient Edited\");\n        }\n      })\n      .catch((err) => console.log(\"error\", err));\n  };\n\n  onNameChange = (event) => {\n    this.setState({ patient_name: event.target.value });\n  };\n  onaddressChange = (event) => {\n    this.setState({ patient_address: event.target.value });\n  };\n  onstatusChange = (event) => {\n    this.setState({ patient_status: event.target.value });\n  };\n  ondateofadmissionChange = (event) => {\n    this.setState({ date_of_admission: event.target.value });\n  };\n  ondurationChange = (event) => {\n    this.setState({ stay_duration: event.target.value });\n  };\n\n  onidchange = (event) => {\n    this.setState({ center_id: event.target.value });\n  };\n\n  render() {\n    return (\n      <div className=\"register-form br3 flex flex-column items-center center shadow-3 mt3\">\n        <main className=\"pa4 black-80\">\n          <div className=\"measure \">\n            <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\n              <legend className=\"f1 fw6 ph0 mh0\">\n                Enter Updated Patient details\n              </legend>\n              <code>Only non empty fields will be updated</code>\n\n              <div className=\"mt3\">\n                <label className=\"db fw6 lh-copy f6\" htmlFor=\"name\">\n                  Name\n                </label>\n                <input\n                  onChange={this.onNameChange}\n                  className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\n                  type=\"text\"\n                  name=\"name\"\n                  id=\"name\"\n                />\n              </div>\n              <div className=\"mt3\">\n                <label className=\"db fw6 lh-copy f6\" htmlFor=\"center-address\">\n                  Address\n                </label>\n                <input\n                  onChange={this.onaddressChange}\n                  className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\n                  type=\"text\"\n                  name=\"center-address\"\n                  id=\"center-address\"\n                />\n              </div>\n              <div className=\"mv3\">\n                <label className=\"db fw6 lh-copy f6\" htmlFor=\"centerTypeId\">\n                  Date of admission\n                </label>\n\n                <input\n                  onChange={this.ondateofadmissionChange}\n                  className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\n                  type=\"text\"\n                  name=\"centerTypeId\"\n                  id=\"centerTypeId\"\n                />\n              </div>\n              <div className=\"mv3\">\n                <label className=\"db fw6 lh-copy f6\" htmlFor=\"Phone\">\n                  Stay Duration (in days)\n                </label>\n                <input\n                  onChange={this.ondurationChange}\n                  className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\n                  type=\"text\"\n                  name=\"Phone\"\n                  id=\"Phone\"\n                />\n              </div>\n\n              <div className=\"mv3\">\n                <label className=\"db fw6 lh-copy f6\" htmlFor=\"status\">\n                  Patient Status\n                </label>\n                <input\n                  onChange={this.onstatusChange}\n                  className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\n                  type=\"text\"\n                  name=\"status\"\n                  id=\"status\"\n                />\n              </div>\n\n              <div className=\"mv3\">\n                <label className=\"db fw6 lh-copy f6\" htmlFor=\"centerid\">\n                  Center Id\n                </label>\n                <code className=\"red\">The center must exist</code>\n                <input\n                  onChange={this.onidchange}\n                  className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\n                  type=\"text\"\n                  name=\"centerid\"\n                  id=\"centerid\"\n                />\n              </div>\n            </fieldset>\n            <div className=\"\">\n              <input\n                onClick={this.onbuttonsubmit}\n                className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\"\n                type=\"submit\"\n                value=\"Submit\"\n              />\n            </div>\n          </div>\n        </main>\n      </div>\n    );\n  }\n}\n\nexport default EditPatient;\n","import React, { Component } from \"react\";\n\nclass EditStaff extends Component {\n  state = {\n    role: [],\n    staff_id: this.props.data,\n    staff_name: \"\",\n    working_hours: \"\",\n    staff_contact_number: \"\",\n    role_id: \"\",\n    center_id: \"\",\n  };\n\n  onbuttonsubmit = () => {\n    fetch(\"https://enigmatic-journey-77724.herokuapp.com/editStaff\", {\n      method: \"post\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        staff_id: this.state.staff_id,\n        staff_name: this.state.staff_name,\n        working_hours: this.state.working_hours,\n        staff_contact_number: this.state.staff_contact_number,\n        role_id: this.state.role_id,\n        center_id: this.state.center_id,\n      }),\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        if (data.staff_id) {\n          window.alert(\"staff updated\");\n        }\n      })\n      .catch((err) => console.log(\"error\", err));\n  };\n\n  componentDidMount() {\n    fetch(\"https://enigmatic-journey-77724.herokuapp.com/staffrole\")\n      .then((response) => response.json())\n      .then((data) => {\n        if (data[0].role_id) {\n          this.setState({ role: data });\n        }\n      })\n      .catch((err) => console.log(err));\n  }\n\n  onNameChange = (event) => {\n    this.setState({ staff_name: event.target.value });\n  };\n  onWorking_hoursChange = (event) => {\n    this.setState({ working_hours: event.target.value });\n  };\n  oncontact_numberChange = (event) => {\n    this.setState({ staff_contact_number: event.target.value });\n  };\n  onRole_idChange = (event) => {\n    this.setState({ role_id: event.target.value });\n  };\n  onidChange = (event) => {\n    this.setState({ center_id: event.target.value });\n  };\n  render() {\n    return (\n      <div className=\"register-form br3 flex flex-column items-center center shadow-3 mt3\">\n        <main className=\"pa4 black-80\">\n          <div className=\"measure \">\n            <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\n              <legend className=\"f1 fw6 ph0 mh0\">Enter staff details</legend>\n              <div className=\"mt3\">\n                <label className=\"db fw6 lh-copy f6\" htmlFor=\"name\">\n                  Name\n                </label>\n                <input\n                  onChange={this.onNameChange}\n                  className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\n                  type=\"text\"\n                  name=\"name\"\n                  id=\"name\"\n                />\n              </div>\n              <div className=\"mt3\">\n                <label className=\"db fw6 lh-copy f6\" htmlFor=\"working-hours\">\n                  Working Hours (eg: 900-1600)\n                </label>\n                <input\n                  onChange={this.onWorking_hoursChange}\n                  className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\n                  type=\"text\"\n                  name=\"working-hours\"\n                  id=\"working-hours\"\n                />\n              </div>\n              <div className=\"mv3\">\n                <label className=\"db fw6 lh-copy f6\" htmlFor=\"Role\">\n                  Role_id\n                </label>\n                <div className=\"flex\">\n                  {this.state.role.map((type) => {\n                    return (\n                      <div key={type.role_id}>\n                        <code>{`${type.role_id} : ${type.role_name}`}</code>\n                      </div>\n                    );\n                  })}\n                </div>\n                <input\n                  onChange={this.onRole_idChange}\n                  className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\n                  type=\"text\"\n                  name=\"Role\"\n                  id=\"Role\"\n                />\n              </div>\n              <div className=\"mv3\">\n                <label className=\"db fw6 lh-copy f6\" htmlFor=\"Contact\">\n                  Contact Number\n                </label>\n                <input\n                  onChange={this.oncontact_numberChange}\n                  className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\n                  type=\"text\"\n                  name=\"Contact\"\n                  id=\"Contact\"\n                />\n              </div>\n              <div className=\"mv3\">\n                <label className=\"db fw6 lh-copy f6\" htmlFor=\"Center-id\">\n                  Center Id (where the staff is going to work)\n                </label>\n                <code className=\"red\">Make sure that center exists.</code>\n                <input\n                  onChange={this.onidChange}\n                  className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\n                  type=\"text\"\n                  name=\"Center-id\"\n                  id=\"Center-id\"\n                />\n              </div>\n            </fieldset>\n            <div className=\"\">\n              <input\n                onClick={this.onbuttonsubmit}\n                className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\"\n                type=\"submit\"\n                value=\"Submit\"\n              />\n            </div>\n          </div>\n        </main>\n      </div>\n    );\n  }\n}\n\nexport default EditStaff;\n","import React, { Component } from \"react\";\n\nclass EditUser extends Component {\n  state = {\n    role: [],\n    user_id: this.props.data,\n    user_name: \"\",\n    user_email: \"\",\n    user_phone: \"\",\n    user_role_id: \"\",\n  };\n\n  onbuttonsubmit = () => {\n    fetch(\"https://enigmatic-journey-77724.herokuapp.com/editUser\", {\n      method: \"post\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify({\n        user_id: this.state.user_id,\n        user_name: this.state.user_name,\n        user_email: this.state.user_email,\n        user_phone: this.state.user_phone,\n        user_role_id: this.state.user_role_id,\n      }),\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        if (data.user_id) {\n          window.alert(\"user updated\");\n        }\n      })\n      .catch((err) => console.log(\"error\", err));\n  };\n\n  componentDidMount() {\n    fetch(\"https://enigmatic-journey-77724.herokuapp.com/userrole\")\n      .then((response) => response.json())\n      .then((data) => {\n        if (data[0].user_role_id) {\n          this.setState({ role: data });\n        }\n      })\n      .catch((err) => console.log(err));\n  }\n\n  onNameChange = (event) => {\n    this.setState({ user_name: event.target.value });\n  };\n  onuser_emailChange = (event) => {\n    this.setState({ user_email: event.target.value });\n  };\n  oncontact_numberChange = (event) => {\n    this.setState({ user_phone: event.target.value });\n  };\n  onuser_Role_idChange = (event) => {\n    this.setState({ user_role_id: event.target.value });\n  };\n\n  render() {\n    return (\n      <div className=\"register-form br3 flex flex-column items-center center shadow-3 mt3\">\n        <main className=\"pa4 black-80\">\n          <div className=\"measure \">\n            <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\n              <legend className=\"f1 fw6 ph0 mh0\">Enter user details</legend>\n              <div className=\"mt3\">\n                <label className=\"db fw6 lh-copy f6\" htmlFor=\"name\">\n                  Name\n                </label>\n                <input\n                  onChange={this.onNameChange}\n                  className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\n                  type=\"text\"\n                  name=\"name\"\n                  id=\"name\"\n                />\n              </div>\n              <div className=\"mt3\">\n                <label className=\"db fw6 lh-copy f6\" htmlFor=\"email\">\n                  Email\n                </label>\n                <input\n                  onChange={this.onuser_emailChange}\n                  className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\n                  type=\"email\"\n                  name=\"email-address\"\n                  id=\"email-address\"\n                />\n              </div>\n              <div className=\"mv3\">\n                <label className=\"db fw6 lh-copy f6\" htmlFor=\"Role\">\n                  Role\n                </label>\n                <div className=\"flex\">\n                  {this.state.role.map((type) => {\n                    return (\n                      <div key={type.user_role_id}>\n                        <code>{`${type.user_role_id} : ${type.user_role_name}`}</code>\n                      </div>\n                    );\n                  })}\n                </div>\n                <input\n                  onChange={this.onuser_Role_idChange}\n                  className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\n                  type=\"text\"\n                  name=\"Role\"\n                  id=\"Role\"\n                />\n              </div>\n              <div className=\"mv3\">\n                <label className=\"db fw6 lh-copy f6\" htmlFor=\"Phone\">\n                  Phone\n                </label>\n                <input\n                  onChange={this.oncontact_numberChange}\n                  className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100\"\n                  type=\"text\"\n                  name=\"Phone\"\n                  id=\"Phone\"\n                />\n              </div>\n            </fieldset>\n            <div className=\"\">\n              <input\n                onClick={this.onbuttonsubmit}\n                className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\"\n                type=\"submit\"\n                value=\"Submit\"\n              />\n            </div>\n          </div>\n        </main>\n      </div>\n    );\n  }\n}\n\nexport default EditUser;\n","import React, { Component } from \"react\";\nimport Sidebar from \"../Sidebar/Sidebar\";\nimport UserInfo from \"./UserInfo\";\nimport EditProfile from \"./EditProfile\";\n\nimport ManageCenters from \"./Actions/ManageCenters/ManageCenters\";\nimport ManageUsers from \"./Actions/ManageUsers/ManageUsers\";\nimport ManageStaffs from \"./Actions/ManageStaffs/ManageStaffs\";\nimport ManagePatients from \"./Actions/ManagePatients/ManagePatients\";\nimport ManageRequests from \"./Actions/ManageRequests/ManageRequests\";\n\nimport NewCenter from \"./Actions/ManageCenters/NewCenter\";\nimport NewStaff from \"./Actions/ManageStaffs/NewStaff\";\nimport NewRequest from \"./Actions/ManageRequests/NewRequest\";\nimport NewUser from \"./Actions/ManageUsers/NewUser\";\nimport NewPatient from \"./Actions/ManagePatients/NewPatient\";\n\nimport EditCenter from \"./Actions/ManageCenters/EditCenter\";\nimport EditPatient from \"./Actions/ManagePatients/EditPatient\";\nimport EditStaff from \"./Actions/ManageStaffs/EditStaff\";\nimport EditUser from \"./Actions/ManageUsers/EditUser\";\n\nclass UserProfile extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  sendData = (data) => {\n    this.setState({ data: data });\n  };\n\n  render() {\n    const { user, profileRoute, onProfileRouteChange } = this.props;\n    return (\n      <div className=\"cf ph0-ns\">\n        <div className=\"fn fl-ns w-20-ns pr4-ns\">\n          <Sidebar user={user} onProfileRouteChange={onProfileRouteChange} />\n        </div>\n        <div className=\"fn fl-ns w-80-ns\">\n          {profileRoute === \"userInfo\" ? (\n            <UserInfo user={user} />\n          ) : profileRoute === \"editProfile\" ? (\n            <EditProfile\n              user={user}\n              onProfileRouteChange={onProfileRouteChange}\n            />\n          ) : profileRoute === \"manageCenters\" ? (\n            <ManageCenters\n              sendData={this.sendData}\n              user={user}\n              onProfileRouteChange={onProfileRouteChange}\n            />\n          ) : profileRoute === \"manageStaffs\" ? (\n            <ManageStaffs\n              sendData={this.sendData}\n              user={user}\n              onProfileRouteChange={onProfileRouteChange}\n            />\n          ) : profileRoute === \"manageUsers\" ? (\n            <ManageUsers\n              sendData={this.sendData}\n              user={user}\n              onProfileRouteChange={onProfileRouteChange}\n            />\n          ) : profileRoute === \"manageRequests\" ? (\n            <ManageRequests\n              sendData={this.sendData}\n              user={user}\n              onProfileRouteChange={onProfileRouteChange}\n            />\n          ) : profileRoute === \"managePatients\" ? (\n            <ManagePatients\n              sendData={this.sendData}\n              user={user}\n              onProfileRouteChange={onProfileRouteChange}\n            />\n          ) : profileRoute === \"newCenter\" ? (\n            <NewCenter />\n          ) : profileRoute === \"newStaff\" ? (\n            <NewStaff />\n          ) : profileRoute === \"newRequest\" ? (\n            <NewRequest />\n          ) : profileRoute === \"newPatient\" ? (\n            <NewPatient />\n          ) : profileRoute === \"newUser\" ? (\n            <NewUser />\n          ) : profileRoute === \"centerStaffs\" ? (\n            <ManageStaffs\n              data={this.state.data}\n              profileRoute={profileRoute}\n              sendData={this.sendData}\n              user={user}\n              onProfileRouteChange={onProfileRouteChange}\n            />\n          ) : profileRoute === \"centerPatients\" ? (\n            <ManagePatients\n              data={this.state.data}\n              profileRoute={profileRoute}\n              sendData={this.sendData}\n              user={user}\n              onProfileRouteChange={onProfileRouteChange}\n            />\n          ) : profileRoute === \"editCenter\" ? (\n            <EditCenter data={this.state.data} />\n          ) : profileRoute === \"editPatient\" ? (\n            <EditPatient data={this.state.data} />\n          ) : profileRoute === \"editStaff\" ? (\n            <EditStaff data={this.state.data} />\n          ) : profileRoute === \"editUser\" ? (\n            <EditUser data={this.state.data} />\n          ) : (\n            \"\"\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default UserProfile;\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Nav from \"../components/Nav/Nav\";\nimport About from \"../components/About/About\";\nimport Home from \"./home\";\nimport UserProfile from \"../components/UserProfile/UserProfile\";\nimport Particles from \"react-particles-js\";\n\nconst particlesOptions = {\n  particles: {\n    number: {\n      value: 30,\n      density: {\n        enable: true,\n        area: 300,\n      },\n    },\n  },\n};\n\nconst initialState = {\n  user: {},\n  isSignedIn: false,\n  route: \"home\",\n  profileRoute: \"userInfo\",\n};\n\nclass App extends Component {\n  state = initialState;\n\n  loadUser = (data) => {\n    this.setState({\n      user: data,\n    });\n  };\n\n  onRouteChange = (route) => {\n    if (route === \"home\") {\n      this.setState(initialState);\n    } else if (route === \"userProfile\") {\n      this.setState({ isSignedIn: true });\n    }\n    this.setState({ route });\n  };\n\n  onProfileRouteChange = (profileRoute) => {\n    this.setState({ profileRoute });\n  };\n\n  render() {\n    const { isSignedIn, user, route, profileRoute } = this.state;\n    return (\n      <div>\n        <Particles className=\"particles\" params={particlesOptions} />\n        <Nav isSignedIn={isSignedIn} onRouteChange={this.onRouteChange} />\n\n        {route === \"home\" ? (\n          <Home onRouteChange={this.onRouteChange} loadUser={this.loadUser} />\n        ) : route === \"about\" ? (\n          <About />\n        ) : (\n          <UserProfile\n            user={user}\n            profileRoute={profileRoute}\n            onProfileRouteChange={this.onProfileRouteChange}\n          />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./containers/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}